<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">

    <title>Cflow Statistics</title>
    <meta name="description" content="Cflow Statistics">

    <style>
        .bar {
            fill: steelblue;
        }

        .axis text {
            font: 10px sans-serif;
        }

        .axis path,
        .axis line {
            fill: none;
            stroke: black;
            shape-rendering: crispEdges;
        }

        .x.axis path {
            display: none;
        }

        header {
            background-color: #fafafa;
            border-left: 5px solid steelblue;
            padding: 10px;
            font-family: Impact, Charcoal, sans-serif;
            font-weight: normal;
        }

        header h1 {
            margin: 0;
        }

        header ul {
            margin: 0;
            padding: 0;
            list-style-type: none;
        }

        header ul li { 
            display: inline; 
            opacity: 0.25;
        }

        header ul li a { 
            text-decoration: none;
            color: black;
        }

        h2 {
            background-color: #fafafa;
            border-left: 5px solid steelblue;
            padding: 10px;
            font-family: Impact, Charcoal, sans-serif;
            font-weight: normal;
        }

        p {
            padding: 10px;
            background-color: #fafafa;
            margin: 5px 5px 5px 10px;
            border-left: 5px solid orange;
            font-family: Impact, Charcoal, sans-serif;
            font-weight: normal;
        }

        .green {
            color: green;
        }

        .red {
            color: red;
        }
    </style>
</head>

<body>
    <script src="https://d3js.org/d3.v4.min.js"></script>

    <header>
    <h1>Cflow Statistics</h1>
    <ul>
        <li><a href="#result">Result</a> |</li>
        <li><a href="#overview">Overview</a> |</li>
        <li><a href="#transition-frequency">Transition Frequency</a> |</li>
        <li><a href="#details">Details</a></li>
    </ul>
    </header>

    <h2 id="result">1. Result</h2>
    <p>{{ cflow-result }}</p>

    <h2 id="overview">2. Overview</h2>
    <p><strong>{{ dfa-states }}</strong> DFA states generated</p>
    <p><strong>{{ dfa-final-states }}</strong> DFA final state(s)</p>
    <p><strong>{{ dfa-transitions }}</strong> DFA transitions made</p>

    <h2 id="transition-frequency">3. Transition Frequency</h2>
    <svg class="chart"></svg>

    <h2 id="details">4. Details</h2>
    <p>The first transition was <strong>{{ first-transition }}</strong></p>
    <p>The last transition was <strong>{{ last-transition }}</strong></p>
    <p>The program executed in <strong>{{ execution-time }}</strong> nano-seconds</p>

    <script>
        const margin = { top: 20, right: 30, bottom: 30, left: 40 };
        const width = 800 - margin.left - margin.right;
        const height = 400 - margin.top - margin.bottom;

        const x = d3.scaleBand()
            .rangeRound([0, width])
            .padding(.1);

        const y = d3.scaleLinear()
            .range([height, 0]);

        const xAxis = d3.axisBottom(x);
        const yAxis = d3.axisLeft(y);

        const chart = d3.select('.chart')
            .attr('width', width + margin.left + margin.right)
            .attr('height', height + margin.top + margin.bottom)
            .append('g')
                .attr('transform', `translate(${margin.left}, ${margin.top})`);

        d3.tsv('data.tsv', type, (error, data) => {
            x.domain(data.map(d => d.name));
            y.domain([0, d3.max(data, d => d.value)]);

            chart.append('g')
                .attr('class', 'x axis')
                .attr('transform', `translate(0, ${height})`)
                .call(xAxis);

            chart.append('g')
                .attr('class', 'y axis')
                .call(yAxis);

            chart.selectAll('.bar')
                .data(data)
                .enter().append('rect')
                    .attr('class', 'bar')
                    .attr('x', d => x(d.name))
                    .attr('y', d => y(d.value))
                    .attr('height', d => height - y(d.value))
                    .attr('width', x.bandwidth());
        });

        function type(d) {
            d.value = +d.value;
            return d;
        }
    </script>
</body>

</html>